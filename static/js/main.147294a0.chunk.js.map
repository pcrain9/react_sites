{"version":3,"sources":["components/MapContainer.module.css","components/Header.module.css","components/GetStadiumInfo.js","store/store-index.js","components/back_arrow.png","components/StadiumInfoReadOut.js","components/MapContainer.js","components/Header.js","App.js","reportWebVitals.js","index.js","components/StadiumInfoReadOut.module.css","components/GetStadiumInfo.module.css"],"names":["module","exports","GetStadiumInfo","props","userInput","useRef","useState","typedInput","setTypedInput","className","classes","test_field","onSubmit","event","preventDefault","locationQuery","onSetLocation","form_handler","input_handler","type","name","placeholder","ref","value","onChange","target","submit_handler","displaySlice","createSlice","initialState","showResults","reducers","show","state","hide","store","configureStore","reducer","displayActions","actions","StadiumInfoReadOut","dispatch","useDispatch","displayHandler","useSelector","userSelectedStadium","setUserSelectedStadium","backToFullListHandler","locations","map","element","readout","items","onClick","location","onLocationSelected","filter","big_readout","src","back_arrow","back_badge","alt","single_item","MapContainer","userMadeNextQuery","setUserMadeNextQuery","stadiumsHolder","setStadiumsHolder","setLocations","selection","setSelection","showLocations","setShowLocations","mapZoom","setMapZoom","lat","lng","center","setCenter","a","fetch","stadiumInfo","json","stadiumInfoJson","status","stadiums","i","features","length","properties","Ballpark","geometry","coordinates","url","current","jStadiumInfo","meta","code","mapResults","counter","response","venues","Math","abs","sortKey","console","log","sort","b","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getStadiumInfo","user_view","info_readout","onUserMadeNextQuery","googleMapsApiKey","mapContainerStyle","height","width","margin","marginTop","zoom","selectLocation","clickable","onCloseClick","Header","main_header","header_title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.147294a0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"user_view\":\"MapContainer_user_view__3Qzad\",\"info_readout\":\"MapContainer_info_readout__PuU6B\",\"items\":\"MapContainer_items__18X25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_header\":\"Header_main_header__4TmxQ\",\"header_title\":\"Header_header_title__3oNzL\"};","import React, { useRef, useState } from 'react';\r\nimport classes from './GetStadiumInfo.module.css';\r\n\r\nfunction GetStadiumInfo(props) {\r\n\r\n    const userInput = useRef();\r\n    const[typedInput, setTypedInput] = useState('');\r\n\r\n    function findStadiumSubmitHandler(event) {\r\n        event.preventDefault();\r\n        const locationQuery = userInput;\r\n        props.onSetLocation(locationQuery);\r\n        setTypedInput('');\r\n    }\r\n\r\n    function stadiumTypedHandler(event){\r\n        setTypedInput(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={classes.test_field}>\r\n                <form\r\n                onSubmit={findStadiumSubmitHandler}\r\n                className={classes.form_handler}>\r\n                    <input \r\n                    className={classes.input_handler}\r\n                    type='text'\r\n                    name=\"location_input\"\r\n                    placeholder=\"type a location here!\"\r\n                    ref= {userInput}\r\n                    value= {typedInput}\r\n                    onChange= {stadiumTypedHandler} />\r\n                    <button className={classes.submit_handler}>Submit</button>\r\n                </form>\r\n      \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GetStadiumInfo;","import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst displaySlice = createSlice({\r\n    name: \"display\",\r\n    initialState: { showResults: true },\r\n    reducers: {\r\n        show(state) {\r\n            state.showResults=true;\r\n        },\r\n        hide(state) {\r\n            state.showResults=false;\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: displaySlice.reducer\r\n});\r\n\r\nexport const displayActions = displaySlice.actions;\r\nexport default store;\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/back_arrow.202fcc62.png\";","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { displayActions } from '../store/store-index';\r\nimport classes from './StadiumInfoReadOut.module.css';\r\nimport back_arrow from './back_arrow.png';\r\n\r\n\r\nfunction StadiumInfoReadOut(props) {\r\n    \r\n    const dispatch = useDispatch();\r\n    const displayHandler = useSelector(state => state.showResults);\r\n    \r\n    const [userSelectedStadium, setUserSelectedStadium] = useState('');\r\n\r\n\r\n    function locationWasSelectedHandler(name, location) {\r\n        props.onLocationSelected(location);\r\n        setUserSelectedStadium(name);\r\n        dispatch(displayActions.hide());\r\n    }\r\n\r\n    function backToFullListHandler() {\r\n        //setLocationsAmountSelector(true);\r\n        dispatch(displayActions.show());\r\n        setUserSelectedStadium('');\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                displayHandler ?\r\n                    props.locations.map(element => {\r\n                        return (\r\n                            <div className={classes.readout}>\r\n                                <h3 className={classes.items}\r\n                                    onClick={() => locationWasSelectedHandler(element.name, element.location)}\r\n                                >{element.name}</h3>\r\n                            </div>);\r\n                    }) :\r\n                    props.locations.filter(element => element.name === userSelectedStadium).map(element => {\r\n                        return (<div className={classes.big_readout}>\r\n                            <img src={back_arrow}\r\n                                className={classes.back_badge}\r\n                                onClick={backToFullListHandler}\r\n                                alt=''/>\r\n                            <h3 className={classes.single_item}\r\n\r\n                            >{element.name}</h3>\r\n                        </div>);\r\n                    })\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StadiumInfoReadOut;","import React, { useState, useEffect } from 'react';\r\nimport { GoogleMap, LoadScript, Marker, InfoWindow } from '@react-google-maps/api';\r\nimport { useDispatch } from 'react-redux';\r\nimport GetStadiumInfo from './GetStadiumInfo';\r\nimport StadiumInfoReadOut from './StadiumInfoReadOut';\r\nimport { displayActions } from '../store/store-index';\r\n\r\nimport classes from './MapContainer.module.css';\r\n\r\nconst MapContainer = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [userMadeNextQuery, setUserMadeNextQuery] = useState(false);\r\n    const [stadiumsHolder, setStadiumsHolder] = useState([]);\r\n    const [locations, setLocations] = useState([]);\r\n    const [selection, setSelection] = useState({});\r\n    const [showLocations, setShowLocations] = useState(true);\r\n    const [mapZoom, setMapZoom] = useState(7);\r\n    const mapStyles = {\r\n        height: '100vh',\r\n        width: \"100%\",\r\n        margin: 'auto',\r\n        marginTop: '100px'\r\n    };\r\n    const [center, setCenter] = useState({\r\n        lat: 40,\r\n        lng: -97.7431\r\n    });\r\n\r\n    //grab stadium info on render\r\n    async function getStadiumInfo() {\r\n\r\n        const stadiumInfo = await fetch(\"https://raw.githubusercontent.com/cageyjames/GeoJSON-Ballparks/master/ballparks.geojson\");\r\n\r\n        const stadiumInfoJson = await stadiumInfo.json();\r\n        //bad request check\r\n        if (stadiumInfo.status !== 200) {\r\n            setShowLocations(false);\r\n            setMapZoom(3.5);\r\n            setCenter({\r\n                lat: 40,\r\n                lng: -97.7431\r\n            });\r\n            return;\r\n        }\r\n\r\n        const stadiums = [];\r\n        for (let i = 0; i < stadiumInfoJson.features.length; i++) {\r\n            stadiums[i] = {\r\n                name: stadiumInfoJson.features[i].properties.Ballpark,\r\n                location: {\r\n                    lat: stadiumInfoJson.features[i].geometry.coordinates[1],\r\n                    lng: stadiumInfoJson.features[i].geometry.coordinates[0]\r\n                }\r\n            }\r\n        }\r\n\r\n        setStadiumsHolder(stadiums);\r\n    }\r\n\r\n    //send api request based on user input\r\n    async function userQueryHandler(userInput) {\r\n        setLocations([]);\r\n        setUserMadeNextQuery(true);\r\n        setShowLocations(true);\r\n        let url = \"https://api.foursquare.com/v2/venues/search?near=\" + userInput.current.value + \"&radius=100000&limit=10&categoryId=4bf58dd8d48988d18c941735&client_id=XK5W5QAM0CYNAE2IHJ2NGJJ0WYBMTKJGIYZVWTCLTTPJF0B4&client_secret=XOY0TYQKJXO1EV4YBXZMRF3GQ5YC1GUZLFXB5XWVUANW3KIV&v=20210726\";\r\n        const stadiumInfo = await fetch(url);\r\n        const jStadiumInfo = await stadiumInfo.json();\r\n\r\n        if (jStadiumInfo.meta.code !== 200) {\r\n            setMapZoom(3.5);\r\n            setCenter({\r\n                lat: 40,\r\n                lng: -97.7431\r\n            });\r\n            setShowLocations(false);\r\n            return;\r\n        }\r\n\r\n        const mapResults = [];\r\n        let counter = 0;\r\n        //if the promise returned no results, print error message, return\r\n        if (jStadiumInfo.response.venues.length === 0) {\r\n            setShowLocations(false);\r\n            return;\r\n        }\r\n\r\n        for (let i = 0; i < stadiumsHolder.length; i++) {\r\n            if (Math.abs(stadiumsHolder[i].location.lat - jStadiumInfo.response.venues[0].location.lat) < 5 &&\r\n                Math.abs(stadiumsHolder[i].location.lng - jStadiumInfo.response.venues[0].location.lng) < 5) {\r\n                mapResults[counter++] = {\r\n                    name: stadiumsHolder[i].name,\r\n                    location: {\r\n                        lat: stadiumsHolder[i].location.lat,\r\n                        lng: stadiumsHolder[i].location.lng\r\n                    },\r\n                    sortKey: (Math.abs(stadiumsHolder[i].location.lat) - Math.abs(stadiumsHolder[i].location.lng)) + (Math.abs(jStadiumInfo.response.venues[0].location.lat) - Math.abs(jStadiumInfo.response.venues[0].location.lng))\r\n                };\r\n\r\n            }\r\n        }\r\n        console.log(mapResults);\r\n        //sort results method here\r\n        mapResults.sort((a, b) => {return b.sortKey - a.sortKey;});\r\n        console.log(mapResults);\r\n        dispatch(displayActions.show());\r\n        setLocations(mapResults);\r\n        setCenter({\r\n            lat: jStadiumInfo.response.venues[0].location.lat,\r\n            lng: jStadiumInfo.response.venues[0].location.lng\r\n        });\r\n        setMapZoom(5.5);\r\n    }\r\n    //get user location on load\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(function(position){\r\n            setCenter({\r\n                lat: position.coords.latitude,\r\n                lng: position.coords.longitude\r\n            });\r\n        });\r\n        getStadiumInfo();\r\n    }, []);\r\n\r\n    function selectLocation(element) {\r\n        setSelection(element);\r\n    }\r\n\r\n    function goToLocationHandler(location) {\r\n        setMapZoom(12);\r\n        setCenter({\r\n            lat: location.lat,\r\n            lng: location.lng\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={classes.user_view}>\r\n            <section className={classes.info_readout}>\r\n                <GetStadiumInfo onSetLocation={userQueryHandler} />\r\n                {\r\n                    showLocations ?\r\n                        < StadiumInfoReadOut\r\n                            onLocationSelected={goToLocationHandler}\r\n                            onUserMadeNextQuery={userMadeNextQuery}\r\n                            className={classes.items}\r\n                            locations={locations}\r\n                        /> : <h2>Error: There was nothing to show for that area :(</h2>\r\n                }\r\n            </section>\r\n            <LoadScript\r\n                googleMapsApiKey=\"AIzaSyDt7UkFiL_-59O-MTBBSh6mtIt3LUQ6WCc\">\r\n                <GoogleMap\r\n                    mapContainerStyle={mapStyles}\r\n                    zoom={mapZoom}\r\n                    center={center}>\r\n                    {showLocations ? locations.map(element => {\r\n                        return (\r\n                            <Marker key={element.location.lat}\r\n                                position={element.location}\r\n                                name={element.name}\r\n                                onClick={() => { selectLocation(element) }} />)\r\n                    }) : null}\r\n                    {\r\n                        showLocations ? selection.location &&\r\n                            (\r\n                                <InfoWindow\r\n                                    position={selection.location}\r\n                                    clickable={true}\r\n                                    onCloseClick={() => { setSelection({}) }} >\r\n                                    <p>{selection.name}</p>\r\n                                </InfoWindow>\r\n                            ) : null\r\n                    }\r\n                </GoogleMap>\r\n            </LoadScript>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default MapContainer;\r\n","import React from 'react';\r\n\r\nimport classes from './Header.module.css';\r\n\r\nfunction Header() {\r\n\r\n    return(\r\n        <div className={classes.main_header}>\r\n            <h3 className={classes.header_title}>Baseball Stadium Finder App: Find a stadium near you!</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport MapContainer from './components/MapContainer';\r\nimport Header from './components/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Header />\r\n     <MapContainer />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store-index';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"readout\":\"StadiumInfoReadOut_readout__3N3I9\",\"items\":\"StadiumInfoReadOut_items__3C5wM\",\"onLoad\":\"StadiumInfoReadOut_onLoad__2W2xJ\",\"big_readout\":\"StadiumInfoReadOut_big_readout__2NcYM\",\"single_item\":\"StadiumInfoReadOut_single_item__3Hh-c\",\"back_badge\":\"StadiumInfoReadOut_back_badge__1iJ97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test_field\":\"GetStadiumInfo_test_field__bb65v\",\"input_handler\":\"GetStadiumInfo_input_handler__q0o4f\",\"submit_handler\":\"GetStadiumInfo_submit_handler__2ebio\"};"],"sourceRoot":""}